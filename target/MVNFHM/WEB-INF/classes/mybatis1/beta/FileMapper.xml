<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FileMapper">
	
	<!--表名 -->
	<sql id="tableName">
		BETA_ROLLING_FILE
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		FILE_ID,	
		GENERAL_ARCHIVE,	
		CATALOG_NUMBER,	
		VOLUME_SN,	
		VOLUME_NUM,	
		FILE_SN,	
		FILE_NAME,	
		FILE_NUM,	
		FILE_RESPONSIBLER,	
		START_PAGE,	
		FILE_PAGE,	
		FILE_DATE,	
		FILE_YEAR,	
		STORAGE_TIME,	
		SECRET_LEVEL,	
		COMPANY_NAME,	
		FILE_DESCRIPTION
		ZERO
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{FILE_ID},	
		#{GENERAL_ARCHIVE},	
		#{CATALOG_NUMBER},	
		#{VOLUME_SN},	
		#{VOLUME_NUM},	
		#{FILE_SN},	
		#{FILE_NAME},	
		#{FILE_NUM},	
		#{FILE_RESPONSIBLER},	
		#{START_PAGE},	
		#{FILE_PAGE},	
		#{FILE_DATE},	
		#{FILE_YEAR},	
		#{STORAGE_TIME},	
		#{SECRET_LEVEL},	
		#{COMPANY_NAME},	
		#{FILE_DESCRIPTION}
		#{ZERO}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		GENERAL_ARCHIVE,
		CATALOG_NUMBER,
		VOLUME_SN,
		VOLUME_NUM,
		FILE_SN,
		FILE_NAME,
		FILE_NUM,
		FILE_RESPONSIBLER,
		START_PAGE,
		FILE_PAGE,
		FILE_DATE,
		FILE_YEAR,
		STORAGE_TIME,
		SECRET_LEVEL,
		FILE_DESCRIPTION
		) values (
		#{GENERAL_ARCHIVE},
		#{CATALOG_NUMBER},
		#{VOLUME_SN},
		#{VOLUME_NUM},
		#{FILE_SN},
		#{FILE_NAME},
		#{FILE_NUM},
		#{FILE_RESPONSIBLER},
		#{START_PAGE},
		#{FILE_PAGE},
		#{FILE_DATE},
		#{FILE_YEAR},
		#{STORAGE_TIME},
		#{SECRET_LEVEL},
		#{FILE_DESCRIPTION}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			FILE_ID = #{FILE_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			GENERAL_ARCHIVE = #{GENERAL_ARCHIVE},
			CATALOG_NUMBER = #{CATALOG_NUMBER},
			VOLUME_SN = #{VOLUME_SN},
			VOLUME_NUM = #{VOLUME_NUM},
			FILE_SN = #{FILE_SN},
			FILE_NAME = #{FILE_NAME},
			FILE_NUM = #{FILE_NUM},
			FILE_RESPONSIBLER = #{FILE_RESPONSIBLER},
			START_PAGE = #{START_PAGE},
			FILE_PAGE = #{FILE_PAGE},
			FILE_DATE = #{FILE_DATE},
			FILE_YEAR = #{FILE_YEAR},
			STORAGE_TIME = #{STORAGE_TIME},
			SECRET_LEVEL = #{SECRET_LEVEL},
			FILE_DESCRIPTION = #{FILE_DESCRIPTION}
		where 
		FILE_ID = #{FILE_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			FILE_ID = #{FILE_ID}
	</select>

	<!-- 通过FILE_NAME获取数据 -->
	<select id="findByName" parameterType="pd" resultType="pd" >
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		VOLUME_NUM = #{VOLUME_NUM}
		AND FILE_SN = #{FILE_SN}
	</select>

	<!-- 通过id获取name -->
	<select id="findNameById" parameterType="pd" resultType="pd" >
		select
		FILE_NAME
		from
		<include refid="tableName"></include>
		where
		FILE_ID = #{pd.FILE_ID}
	</select>
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		FILE_ID AS ID ,
		GENERAL_ARCHIVE,
		CATALOG_NUMBER,
		VOLUME_SN,
		VOLUME_NUM,
		FILE_SN,
		FILE_NAME,
		FILE_NUM,
		FILE_RESPONSIBLER,
		START_PAGE,
		FILE_PAGE,
		FILE_DATE,
		FILE_YEAR,
		STORAGE_TIME,
		SECRET_LEVEL,
		COMPANY_NAME,
		FILE_DESCRIPTION
		ZERO
		from
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.ID!= null and pd.ID != ''"><!-- 关键词检索 -->
		and
		(
			FILE_ID =#{pd.ID}
			)
		</if>
		<!--<if test="pd.VOLUME_ID!= null and pd.VOLUME_ID != ''">&lt;!&ndash; 关键词检索 &ndash;&gt;-->
			<!--and-->
			<!--(-->
			<!--VOLUME_ID = #{pd.VOLUME_ID}-->
			<!--&lt;!&ndash;	根据需求自己加检索条件-->
                <!--字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')-->
                 <!--or-->
                <!--字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')-->
            <!--&ndash;&gt;-->
			<!--)-->
		<!--</if>-->
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件-->
					FILE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')

				)
		</if>
		<if test="pd.time!= null and pd.time != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			FILE_DATE LIKE CONCAT(CONCAT('%', #{pd.time}),'%')

			)
		</if>
        <if test="pd.lastStart!= null and pd.lastStart != ''"><!-- 关键词检索 -->
            and
            (
            <!--	根据需求自己加检索条件  -->
            FILE_DATE &gt;= #{pd.lastStart}
            )
        </if>
        <if test="pd.lastEnd!= null and pd.lastEnd != ''"><!-- 关键词检索 -->
            and
            (
            <!--	根据需求自己加检索条件  -->
            FILE_DATE &lt;= #{pd.lastEnd}
            )
        </if>
	</select>

	<!-- 列表 -->
	<select id="datalistPageSearch" parameterType="page" resultType="pd">
		SELECT
		FILE_ID AS ID,
		GENERAL_ARCHIVE,
		FILE_NUM,
		FILE_NAME,
		FILE_RESPONSIBLER,
		FILE_DESCRIPTION,
		FILE_YEAR,
		ZERO
		FROM BETA_ROLLING_FILE
		where 1=1
		<if test="pd.ID!= null and pd.ID != ''"><!-- 关键词检索 -->
			and
			(
			FILE_ID =#{pd.ID}
			)
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			FILE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
		<if test="pd.time!= null and pd.time != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			FILE_DATE LIKE CONCAT(CONCAT('%', #{pd.time}),'%')

			)
		</if>
		UNION ALL
		SELECT
		UNROLLING_ID AS ID,
		GENERAL_ARCHIVE,
		FILE_NUM,
		FILE_NAME,
		FILE_RESPONSIBLER,
		FILE_DESCRIPTION,
		UNROLLING_YEAR AS FILE_YEAR,
		ZERO
		FROM BETA_UNROLLING_FILE
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			FILE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
		<if test="pd.time!= null and pd.time != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			UNROLLING_DATE LIKE CONCAT(CONCAT('%', #{pd.time}),'%')

			)
		</if>

	</select>

	<!-- 列表案卷-->
	<select id="datalistV" parameterType="page" resultType="pd">
		select
		FILE_ID,
		F.GENERAL_ARCHIVE,
		CATALOG_NUMBER,
		VOLUME_SN,
		VOLUME_NUM,
		FILE_SN,
		FILE_NAME,
		FILE_NUM,
		FILE_RESPONSIBLER,
		START_PAGE,
		FILE_PAGE,
		FILE_DATE,
		FILE_YEAR,
		STORAGE_TIME,
		SECRET_LEVEL,
		COMPANY_NAME,
		FILE_DESCRIPTION,
		F.VOLUME_ID
		from
		BETA_ROLLING_FILE AS F
		LEFT JOIN BETA_ROLLING_VOLUME AS V ON F.VOLUME = V.VOLUME
	</select>

	<!-- 查找name-->
	<select id="findByNum" parameterType="pd" resultType="pd">
		select
		*
		from
		BETA_ROLLING_FILE
		WHERE 1=1
		<if test="VOLUME_NUM!= null and VOLUME_NUM != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			VOLUME_NUM =#{VOLUME_NUM}
			)
		</if>
	</select>

	<!-- 列表案卷-->
	<select id="datalistF" parameterType="page" resultType="pd">
		select
		FILE_ID,
		FILE_NAME
		from
		BETA_ROLLING_FILE
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件-->
			FILE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>

	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			FILE_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>